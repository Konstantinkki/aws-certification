DNS Terminologies
  Domain registrator - Amazon Route 53, GoDaddy ...
  DNS Records: A, AAAA, CNAME, NS ...
  Zone File : contains DNS Records
  Name server: resolves DNS queries (Authoritative or Non-Authoritative)
  Top Level Domail (TLD): .com, .us, .gov, .org ...
  Second Level Domain (SLD): amazon.com, google.com, ...
  Sub Domain : www.example.com
  FQDN (Fully Qualified Domain Name): api.www.example.com

=======================================
Amazon Route 53 
  a Highly available, scalable, fully managed Authoritative DNS (Authoritative = i can update the DNS records)
  Route 53 is also a Domain Registrar
  Ability to check the health of your resources
  The only AWS service which provides 100% availability SLA
  Why route 53? 53 is a reference to the traditional DNS port

=======================================

Route 53 - Records
  How you want to route traffic for a domain
  Each record contains: 
	Domain/Subdomain Name - e.g., example.com
	Record Type - e.g., A or AAAA
	Value - e.g., 12.134.56.78
	Routing Policy - how Route 53 responds to queries
	TTL - amount of time the record cached at DNS Resolvers
  Route 53 supports the following DNS record types: 
	(must know) A/AAAA/CNAME/NS
	(advanced) CAA/DS/MX/NAPTR/PTR/SOA/TXT/SPF/SRV

========================================

Route 53 - Record Types
  A - maps a hostname to IPv4
  AAAA - maps a hostname to IPv6
  CNAME - maps a hostname to another hostname
	The target is a domain name which  must have an A or AAAA record
	Can't create a CNAME record for top node of a DNS namespace (Zone Apex)
	Example : you can't create for example.com, but you can create for www.example.com
  NS - Name Server for the Hosted Zone
	Control how traffic is routed for a domain

==========================================

Route 53 - Hosted Zones
  A container for records that define how to route traffic to a domain and its subdomains
  Public Hosted Zones - contains records that specify how to route traffic on the internet (public domain names)
	application1.mypublicdomain.com
  Private Hosted Zones - contain records that specify how you route traffic within one or more VPCs (private domain names)
	application1.company.internal
  You pay $0.50 per month per hosted zone

=========================================

Route 53 - Public vs. Private Hosted Zones
  Public - get requests from any internet client
  Private - get requests from Amazon VPC  

  nslookup - get IP by domain
  dig - full info about domain  dns

=========================================
TTL 
	Except for Alias records, TTL is mandatory for each DNS record

=========================================
CNAME vs Alias
  AWS Resources (Load Balancerm, CloudFront...) expose an AWS hostname
	lbl-1234.us-east-2...   and i want myapp.mydomain.com
  CNAME points a hostname to any other hostname. (app.mydomain.com => blabla.anything.com)
	ONLY FOR NON ROOT DOMAIN (something.mydomain.com)
  Alias : 
	Points to hostname to an AWS Resource (app.mydomain.com => blabla.amazonaws.com)
	Works for ROOT Domain and NON ROOT DOMAIN (mydomain.com)
	Free of charge
	Native health check

=========================================

Route 53 - Alias record
  Maps a hostname to an AWS resource
  An extension to DNS functionality
  Automatically recognizes changes in the resource's IP address
  Unlike CNAME, it can be used for the top node of a DNS namespace (Zone Apex), e.g: example.com
  Alias Record is always of type A/AAAA for AWS resources (IPv4/IPv6)
  You can't set the TTL

=========================================

Route 53 - Alias Records Targets
  Elastic Load Balancers
  CloudFront Distributions
  API Gateway 
  Elastic Beanstalk environments
  S3 Websites
  VPC Interface Endpoints
  Global Accelerator accelerator
  Route 53 record in the same hosted zone
  
  You cannot set an ALIAS record for an EC2 DNS name

 ===========================================
Route 53 - Routing Policies
  Define how Route 53 responds to DNS queries
  Don't get confused by the word "Routing"
	it's not the same as Load balancer routing which routes the traffic
	DNS does not route any traffic, it only responds to the DNS queries
  Route 53 Supports the following Routing Policies
	Simple
	Weighted
	Failover
	Latency based
	Geolocation
	Multi-Value Answer
	Geoproximity (using Route 53 Traffic Flow feature)

============================================
Simple Routing Policy
  Typically, route traffic to a single resource
  Can specify multiple values in the same record
  if multiple values are returned, a random one is chosen by the CLIENT
  When Alias enabled, specify only one AWS resource
  Can't be associated with Health Checks

  Route 53 -> Hosted Zones -> <domain name> -> create Record ->   

============================================

Routing Policies - Weighted
  Control the % of the requests that go to each specific resource
  Assign each record a relative weight:
	traffic % = weight for a specific record / sum of the weights for all records
	Weights don't need to sum up to 100
  DNS records must have the same name and type
  Can be associated with Health Check
  Use cases: load balancing between regions, testing, new application versions...
  Assign a weight of 0 to a record to stop sending traffic to a resource
  if all records have weight of 0, then all records will be returned equally

  Example:
	create 3 records with same record name and with type weighted and set % 10,20,70  and 3 different IPs

================================================

Routing Policies - Latency-based
  Redirect to the resource that has the least latency close to us 
  Super helpful when latency for users is a priority
  Latency is based on traffic between users and AWS Regions
  Germany users may be directed to the US (if that's the lowest latency)
  Can be associated with Health Checks (has a dailover capability)

=================================================

Route 53 - Health Checks
  HTTP Health Checks are only for public resources
  Health Check => Automatic DNS Failover: 
	1. Health checks that monitor  an endpoint (application,server, other AWS resource)
	2. Health checks that monitor other health checks (Calculated Health Checks)
	3. Health checks that monitor CloudWatch Alarms (full control !!) - e.g., throttles of DynamoDB, alarms on RDS, custom metrics, ...
	(helpful for private resources)
  Health Checks are integrated with CloudWatch metrics

=================================================

Health Checks - Monitor an Endpoint 
  About 15 global health checkers will check the endpoint health 
	Healthy/Unhealthy Threshold - 3 (default)
	Interval - 30 sec (can set to 10 sec - higher cost)
	Supported protocol: HTTP, HTTPS, and TCP
	IF > 18% of health checkers report the endpoint is healthy, Route 53 considers it Healthy. Overwise, it's Unhealthy
	Ability to choose which locations you want Route 53 to use
  Health Checks pass only when the endpoint responds with the 2xx and 3xx status codes
  Health Checks can be setup to pass / fail based on the text in the first 5120 bytes of the response
  Configure you router/firewall to allow incoming requests from Route 53 Health Checks 

=====================================================

Route 53 - Calculated Health Checks
  Combine the results of multiple Health Checks into a single Health Check
  You can use OR, AND, or NOT
  Can monitor up to 256 Child Health Checks
  Specify how many of the health checks need to pass to make the parent pass
  Usage : perform mainztenance to your website without causing all health checks to fail

=====================================================

Health Checks - Private Hosted Zones
  Route 53 health checkers are outside the VPC
  They can't access private endpoints (private VPC or on-premises resource)
  You can create a CloudWatch Metric and associate a CloudWatch Alarm, then create a Health Check that checks the alarm itself

=====================================================

Routing Policies - Failover (Active-Passive)
  Client -> amazonRoute 53 ----> Health Check -> EC2 Primary
                           |-------------------> EC2 Secondary (Disaster Recovery)
  if health check returm FALSE - route 53 automatically switch to EC2 Secondary

======================================================
Routing Policies - Geolocation
  Different from Latency-based
  This routing is based on user location
  Specify location by Continent, Country or by US State (if there's overlapping, mostprecise loaction selected)
  Should create a "Deffault" record (in case there's no match on location)
  Use cases: website localization, restrict, content, load balancing, ...
  Can be associated with Health Check

======================================================
Geoproximity Routing Policy
  Routing traffic to your resources based on the geographic location of users and resources
  Ability to shift more traffic to resources based on the defined bias
  To change the size of the geographic region, specify bias values : 
	to expand (1 .. 99) - more traffic to the resource
	to shrink (-1 .. -99) - less traffic to the resource
  Resources can be : 
	AWS resources (specify AWS region)
	Non AWS resources (specify Latitude and Longitude)
  You must  use Route 53 Traffic Flow (advanced) to use this feature

=======================================================
Route 53 - Traffic flow 
  Simplify the process of creating and maintaining records in lerge and comples configuration
  Visual editor to manage complex routing decision trees
  Configurations can be saved as Traffic Flow Policy
	Can be applied to different Route 53 Hosted Zones (different domain names)
	Supports versioning 

  Route 53 -> Traffic Flow -> Traffic policies = Graphic Editor

=======================================================
Routing Policies - IP-based Routing
  Routing is based on clients'IP address
  You provide a list of CIDRs for your clients and the corresponding endpoints/locations (user IP to endpoint mappings)
  Use cases : Optimize performance, reduce network costs ...
  Example: route and users from a particular ISP to a specific endpoint

======================================================

Routing Policies - Multi-Value
  Use when routing traffic to multiple resources
  Route 53 return multiple values/resources
  Can be associated with health Checks (return only values for healthy resources)
  Up to 8 healthy records are returned for each Multi-Value query
  Multi-Value is not a substitute for having an ELB

======================================================

Domain Registar vs. DNS Service
  You buy or register your domain name with a Domain Registrar typically by paying annual charges (e.g. GoDaddy, Amazon Registrar Inc., ...)
  The Domain Registrar usually provides you with a DNS service to manage your DNS records
  But you can use another DNS service to manage your DNS record
  Example: purchase the domain from GoDaddy and use Route 53 to manage your DNS records

=====================================================


  






  



























  	



